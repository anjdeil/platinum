import { NextApiRequest, NextApiResponse } from 'next';
import {
  fetchSitemap,
  rewriteChildSitemapUrls,
  SITEMAP_CACHE_HEADERS,
} from '@/utils/sitemap';
import getDomainFromUrl from '@/utils/getDomainFromUrl';

const WP_ADMIN_DOMAIN = getDomainFromUrl(
  process.env.NEXT_PUBLIC_WP_URL || 'admin.example.com'
);

/**
 *
 * this handler transforms and proxies an autogenerated WordPress root sitemap
 */

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  try {
    // Fetch the root sitemap from WordPress
    const wpSitemapUrl = `https://${WP_ADMIN_DOMAIN}/sitemap.xml`;
    const xmlContent = await fetchSitemap(wpSitemapUrl);

    const transformedXml = await rewriteChildSitemapUrls(xmlContent);

    // Set cache headers and return the transformed XML
    res.setHeader('Content-Type', 'application/xml');
    Object.entries(SITEMAP_CACHE_HEADERS).forEach(([key, value]) => {
      res.setHeader(key, value);
    });

    return res.status(200).send(transformedXml);
  } catch (error) {
    console.error('Error processing sitemap:', error);
    return res.status(500).send('Error generating sitemap');
  }
}

export const config = {
  api: {
    responseLimit: false,
  },
};
